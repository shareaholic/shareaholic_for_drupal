<?php

/**
 * @file
 * Allows site owner to add share buttons/recommendations on their website
 */

define('SHAREAHOLIC_URL', 'https://shareaholic.com');
define('MODULE_PATH', drupal_get_path('module', 'shareaholic'));
define('SHAREAHOLIC_ASSET_DIR', MODULE_PATH . '/assets/');

module_load_include('php', 'shareaholic', 'utilities');
module_load_include('php', 'shareaholic', 'admin');

/**
 * Implementation of hook_menu()
 *
 * Establish a link to the Shareaholic Admin settings page
 *
 * @return The menu structure containing link to settings page
 */
function shareaholic_menu() {
  // Path to the shareaholic settings page
  $items['admin/config/content/shareaholic/settings'] = array(
    'title' => 'Shareaholic Settings',
    'description' => 'Settings for the Shareaholic Plugin',
    'page callback' => 'shareaholic_admin_settings',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


/**
 * Renders page for shareaholic admin settings
 *
 * @return The theme to render the settings page
 */
function shareaholic_admin_settings() {
  return theme('shareaholic_admin_settings');
}


/**
 * Implements hook_theme().
 * Defines the themes available for the
 *
 * @return array An array that includes themes implemented for shareaholic
 * admin pages
 */
function shareaholic_theme() {
  return array(
    'shareaholic_admin_settings' => array(
      'path' => MODULE_PATH . '/templates',
      'template' => 'shareaholic_admin_settings',
    ),
    'terms_of_service_modal' => array(
      'render element' => 'form',
      'path' => MODULE_PATH . '/templates',
      'template' => 'terms_of_service_modal',
    ),
    'failed_to_create_api_key_modal' => array(
      'render element' => 'form',
      'path' => MODULE_PATH . '/templates',
      'template' => 'failed_to_create_api_key_modal',
    ),
  );
}

/**
 * Returns the form for the terms of service modal popup
 */
function tos_modal_form() {
  $form['#theme'] = 'terms_of_service_modal';
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Get Started Â»'),
  );
  $form['submit']['#attributes']['class'][] = 'btn_main';
  return $form;
}

function tos_modal_form_submit($form, &$form_state) {
  ShareaholicUtilities::accept_terms_of_service();
}

/**
 * Returns the form for the failed to create api key modal popup
 */
function failed_to_create_api_key_form() {
  $form['#theme'] = 'failed_to_create_api_key_modal';
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Retry'),
  );
  $form['submit']['#attributes']['class'][] = 'btn_main';
  return $form;
}

function failed_to_create_api_key_form_submit($form, &$form_state) {
}

function template_preprocess_terms_of_service_modal(&$variables) {
  $variables['tos_modal'] = array();
  $hidden = array();
  foreach (element_children($variables['form']) as $key) {
    $type = $variables['form'][$key]['#type'];
    if ($type == 'hidden' || $type == 'token') {
      $hidden[] = drupal_render($variables['form'][$key]);
    }
    else {
      $variables['tos_modal'][$key] = drupal_render($variables['form'][$key]);
    }
  }
  $variables['tos_modal']['hidden'] = implode($hidden);
  $variables['image_url'] = '/' . SHAREAHOLIC_ASSET_DIR . '/img';
}

function template_preprocess_failed_to_create_api_key_modal(&$variables) {
  $variables['failed_api_key_modal'] = array();
  $hidden = array();
  foreach (element_children($variables['form']) as $key) {
    $type = $variables['form'][$key]['#type'];
    if ($type == 'hidden' || $type == 'token') {
      $hidden[] = drupal_render($variables['form'][$key]);
    }
    else {
      $variables['failed_api_key_modal'][$key] = drupal_render($variables['form'][$key]);
    }
  }
  $variables['failed_api_key_modal']['hidden'] = implode($hidden);
}

